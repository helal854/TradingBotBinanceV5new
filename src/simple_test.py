#!/usr/bin/env python3
"""
ุงุฎุชุจุงุฑ ุจุณูุท ููุจูุช
"""
import asyncio
import logging
import sys
from pathlib import Path

# ุฅุถุงูุฉ ูุณุงุฑ ุงููุดุฑูุน
sys.path.append(str(Path(__file__).parent.parent))

from src.database import db_manager
from src.keyboards import get_main_keyboard
from config.config import MESSAGES

# ุฅุนุฏุงุฏ ุงูุชุณุฌูู
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def test_basic_functions():
    """ุงุฎุชุจุงุฑ ุงููุธุงุฆู ุงูุฃุณุงุณูุฉ"""
    print("๐ ุงุฎุชุจุงุฑ ุงููุธุงุฆู ุงูุฃุณุงุณูุฉ...")
    
    try:
        # ุงุฎุชุจุงุฑ ูุงุนุฏุฉ ุงูุจูุงูุงุช
        print("๐ ุงุฎุชุจุงุฑ ูุงุนุฏุฉ ุงูุจูุงูุงุช...")
        await db_manager.init_database()
        
        # ุงุฎุชุจุงุฑ ุฅุถุงูุฉ ูุณุชุฎุฏู
        test_user_id = 123456789
        await db_manager.add_user(test_user_id, "TestUser", "test_user")
        print(f"โ ุชู ุฅุถุงูุฉ ุงููุณุชุฎุฏู {test_user_id}")
        
        # ุงุฎุชุจุงุฑ ุงูุญุตูู ุนูู ูุนูููุงุช ุงููุณุชุฎุฏู
        user_info = await db_manager.get_user_info(test_user_id)
        if user_info:
            print(f"โ ุชู ุงูุญุตูู ุนูู ูุนูููุงุช ุงููุณุชุฎุฏู: {user_info['username']}")
        
        # ุงุฎุชุจุงุฑ ููุญุงุช ุงูููุงุชูุญ
        print("โจ๏ธ ุงุฎุชุจุงุฑ ููุญุงุช ุงูููุงุชูุญ...")
        main_keyboard = get_main_keyboard()
        print("โ ุชู ุฅูุดุงุก ููุญุฉ ุงูููุงุชูุญ ุงูุฑุฆูุณูุฉ ุจูุฌุงุญ")
        
        # ุงุฎุชุจุงุฑ ุงูุฑุณุงุฆู
        print("๐ฌ ุงุฎุชุจุงุฑ ุงูุฑุณุงุฆู...")
        welcome_msg = MESSAGES.get("welcome", "ุฑุณุงูุฉ ุงูุชุฑุญูุจ ุบูุฑ ูุชููุฑุฉ")
        print(f"โ ุฑุณุงูุฉ ุงูุชุฑุญูุจ: {welcome_msg[:50]}...")
        
        # ุงุฎุชุจุงุฑ ุงูุฅุญุตุงุฆูุงุช
        print("๐ ุงุฎุชุจุงุฑ ุงูุฅุญุตุงุฆูุงุช...")
        stats = await db_manager.get_stats()
        print(f"โ ุฅุญุตุงุฆูุงุช ุงููุธุงู: {stats}")
        
        print("๐ ุฌููุน ุงูุงุฎุชุจุงุฑุงุช ุงูุฃุณุงุณูุฉ ูุฌุญุช!")
        return True
        
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุงูุงุฎุชุจุงุฑ: {e}")
        return False

async def main():
    """ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ"""
    print("๐ ุจุฏุก ุงูุงุฎุชุจุงุฑ ุงูุจุณูุท ููุจูุช...")
    
    success = await test_basic_functions()
    
    if success:
        print("โ ุงูุจูุช ุฌุงูุฒ ููุนูู!")
    else:
        print("โ ุงูุจูุช ูุญุชุงุฌ ุฅุตูุงุญุงุช")
    
    return success

if __name__ == "__main__":
    result = asyncio.run(main())
    sys.exit(0 if result else 1)

